"$schema" = 'https://starship.rs/config-schema.json'

# https://github.com/TaouMou/starship-presets/blob/main/starship_text.toml

# Disable the blank line at the start of the prompt
add_newline = true

format = """\
[╭╴](fg:arrow)\
$os\
$username\
$hostname\
(\
    $directory\
)\
$cmd_duration\
${custom.giturl}\
$git_branch\
$git_status\
(\
    $nodejs\
    $python\
    $golang\
    $docker_context\
    $aws\
)
[╰─](fg:arrow)$character\
"""


command_timeout = 5000

right_format = """$all"""

palette = "normal"

[palettes.normal]
arrow = "#EDF2F4"
os = "#5ccfe6"
os_admin = "#6679a4"
directory = "#bae67e"
time = "#bdfffd"
node = "#a5e6ba"
git = "#f17f29"
git_status = "#DFEBED"
python = "#ffd580"
golang = "#79d4fe"
clang = "#caf0f8"
aws = "#ffae57"
duration = "#ce4257"
text_color = "#EDF2F4"
text_light = "#26272A"
purple = "#c3a6ff"

[os.symbols]
Windows = "󰍲"
Ubuntu = "󰕈"
SUSE = ""
Raspbian = "󰐿"
Mint = "󰣭"
Macos = " "
Manjaro = ""
Linux = "󰌽"
Gentoo = "󰣨"
Fedora = "󰣛"
Alpine = ""
Amazon = ""
Android = ""
Arch = "󰣇"
Artix = "󰣇"
CentOS = ""
Debian = "󰣚"
Redhat = "󱄛"
RedHatEnterprise = "󱄛"

[os]
disabled = false

[username]
style_user = 'bold os'
style_root = 'bold os_admin'
format = ' \[[$user](fg:$style)'
disabled = false
show_always = true

[hostname]
format = '@[$hostname]($style)\]'
style = 'os_admin'
ssh_only = false


[character]
success_symbol = "[󰍟](fg:arrow)"
error_symbol = "[󰍟](fg:red)"

[package]
disabled = true


[directory]
truncation_length = 5
truncate_to_repo = false
fish_style_pwd_dir_length = 0
use_logical_path = false
format = '[$path]($style) [$read_only]($read_only_style)'
style = 'fg:85 bold'
disabled = false
read_only = ''
read_only_style = 'red'
truncation_symbol = '.../'
home_symbol = '~'

[time]
disabled = true
format = "at [󱑈 $time]($style)"
time_format = "%H:%M"
style = "bold fg:time"

[cmd_duration]
min_time = 500
format = 'took [$duration](bold yellow)'


[custom.giturl]
# disabled = true
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
format = "on $output "


[git_branch]
symbol = " "
# style = "fg:lavender bg:black"
format = ' [$symbol$branch]($style) '


# https://gist.github.com/akshay-na/2c37a8d21d8abd249543851178f37c0d
[git_status]
ahead = "↑${count} "
behind = "↓${count} "
diverged = "↕${ahead_count} ${behind_count}"
untracked = "?${count} "
modified = "!${count} "
conflicted = "≠ ${count} "
staged = "✓${count} "
stashed = "*${count} "
style = "bright-white"
format = """\
[$ahead_behind](bold green)\
[$stashed](bold green)\
[$behind_behind](bold red)\
[$diverged](bold yellow)\
[$conflicted](bold red)\
[$modified](bold blue)\
[$untracked](bold cyan)\
[$staged](bold green)\
"""

[nodejs]
format = "[ $symbol$version ]($style)"
symbol = " "
version_format = "${raw}"
disabled = false
detect_extensions = ['js', 'mjs', 'cjs', 'ts']
detect_files = ['package.json', '.node-version', '.nvmrc']
detect_folders = ['node_modules']

[python]
format = '[ ${symbol}${pyenv_prefix}(${version})( \($virtualenv\)) ]($style)'
symbol = " "
version_format = "${raw}"
disabled = false

[golang]
symbol = ""
format = '[ $symbol( $version) ]($style)'
detect_files = ["go.mod"]

[docker_context]
symbol = ""
format = '[ $symbol( $context) ]($style)'

[aws]
# format = '[ $symbol -> ($profile )(\($region\) )]($style)'
format = '[$symbol:($profile)(\($region\))]($style)'
symbol = 'aws'
style = 'fg:aws'
